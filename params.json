{
  "name": "Saiddit-project",
  "tagline": "Saiddit",
  "body": "### Table of Contents\r\n1. [Cloud9](#cloud9)\r\n  + [Test DB](#test-db)\r\n  + [Credentials](#credentials)\r\n    + [Admin](#admin)\r\n    + [User](#user)\r\n2. [MySQL](#mysql)\r\n  + [CheatSheet](#cheatsheet)\r\n3. [Flask](#flaskapp)\r\n  + [Resources](#resources)\r\n  + [Structure](#structure)\r\n4. [Project Final Expectations and Deliverables](#project-final-expectations-and-deliverables)\r\n\r\n\r\n----\r\n\r\n## Cloud9\r\n\r\n[Cloud9](https://c9.io) is a cloud-based dev environment.  You can sign up / sign in with your GitHub account and access a [shared workspace](https://ide.c9.io/stvhwrd/csc370-project).  The team ([@dylgol](https://github.com/dylgol), [@sterlinglaird](https://github.com/sterlinglaird), [@stvhwrd](https://github.com/stvhwrd)) will always have access to the shared workspace, but you are welcome to clone it, start from scratch, or ignore it completely.\r\n\r\n<br>\r\n\r\n\r\n### Test DB\r\n\r\n[Giuseppe Maxia test_db](https://github.com/datacharmer/test_db) is installed on the Cloud9 instance at https://ide.c9.io/stvhwrd/csc370-project, an Ubuntu workspace with a clone of this git repository.\r\n\r\n<br>\r\n\r\n\r\n### Credentials\r\n\r\n#### User\r\n\r\nNormally you'll want to enter the MySQL command line interface as a user (not root):\r\n\r\n`mysql-ctl cli`\r\n\r\n<br>\r\n\r\n\r\n#### Admin\r\n\r\n| Username | Password  |\r\n| :------: | :-------- |\r\n| 'csc370' | 'project' |\r\n\r\nAdministrative tasks can be done using the command prefix:\r\n\r\n`mysql -p -u csc370`\r\n\r\nand then entering the password:\r\n\r\n`project`\r\n\r\n<br>\r\n<br>\r\n\r\n## MySQL\r\n\r\n\"MySQL (officially pronounced as \"My S-Q-L\") is an open-source relational database management system... the world's second most widely used RDBMS, and the most widely used open-source client–server model RDBMS.\" - [Wikipedia](https://en.wikipedia.org/wiki/MySQL)\r\n\r\n### Cheatsheet\r\n\r\nHere's a handy cheat sheet for playing with MySQL: [Sven Hofmann's MySQL Cheatsheet](https://gist.github.com/hofmannsven/9164408#file-readme-md)\r\n\r\n<br>\r\n<br>\r\n\r\n\r\n## Flask\r\n\r\nFlask is a Python web framework built with a small core and easy-to-extend philosophy.  We will be using it to interface between the HTML frontend and the MySQL backend.\r\n\r\n<br>\r\n\r\n\r\n### Resources:\r\n\r\n* [Why is Flask a good web framework choice?](https://www.fullstackpython.com/flask.html)\r\n* [Flask-MySQLdb’s documentation](http://flask-mysqldb.readthedocs.io/en/latest/)\r\n* [Creating a Web App From Scratch Using Python Flask and MySQL](http://code.tutsplus.com/tutorials/creating-a-web-app-from-scratch-using-python-flask-and-mysql--cms-22972)\r\n* [Python Web Application Development Using Flask and MySQL](http://codehandbook.org/python-web-application-development-using-flask-and-mysql/)\r\n\r\n<br>\r\n\r\n\r\n### Structure\r\n\r\nThe basic file structure of a small flask application (as ours will be) is:\r\n\r\n````\r\nFlaskApp/\r\n├── app.py\r\n└── static/\r\n    └── style.css\r\n    templates/\r\n    ├── layout.html\r\n    ├── index.html\r\n    └── login.html\r\n        ...\r\n````\r\n\r\n<br>\r\n<br>\r\n\r\n\r\n## Project Final Expectations and Deliverables\r\n\r\n\r\n1. E/R diagram for your solution.\r\n\r\n2. Passwords must be stored in a salted hash format (no plaintext passwords)\r\n\r\n3. Translate your E/R diagram into tables in MySQL and include the necessary constraints.\r\n\r\n4. Create forms to populate your tables.\r\n\r\n5. Create a logged-in “front-page” for a given account.  A front-page shows the top-voted posts for an account’s subscribed subsaiddits.\r\n\r\n6. Create a “default” front-page (not logged-in) that includes only the top-voted posts from the default subsaiddits.\r\n\r\n7. Create a form to delete a post (and all of its comments)\r\n\r\n8. Create and execute the following SQL queries (Will be tested in demo):\r\n\r\n  * Get all of the posts by account A, sorted by highest rating (upvotes minus downvotes)\r\n\r\n  * Get all of the posts from account A’s friends, sorted by highest rating.\r\n\r\n  * Get account A’s subscrbed subsaiddits (include the default subsaiddits)\r\n\r\n  * Get account A’s favourite posts\r\n\r\n  * Get account A’s friends’ favourite posts\r\n\r\n  * Get all of subsaiddit S’s creator’s posts\r\n\r\n  * Get all of the posts in subsaiddit S that contain ``<some text>`` (Very basic search)\r\n\r\n9. What query in section 8 took the most time to execute?  Why?\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}